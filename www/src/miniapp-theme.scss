/**
  * Override default styles to match the theme set by the user in Telegram.
  */

:root {
  --bs-body-bg: var(--tg-theme-secondary-bg-color) !important;
  --bs-body-color: var(--tg-theme-text-color) !important;
  --app-stat-icon-reverse: 0%;
}

// creating new variables using CSS
$darkBgCol: color-mix(in srgb, var(--tg-theme-bg-color), #000 20%);
$darkDarkerBgCol: color-mix(in srgb, var(--tg-theme-bg-color), #000 30%);
$lightCol: color-mix(in srgb, var(--tg-theme-bg-color), #fff 20%);

.app-wrap {
  .badge,
  .text-rarity-3 {
    color: #808080 !important;
  }
  .main-bg {
    background: var(--tg-theme-bg-color);
  }
  .bg-dark {
    background-color: $darkBgCol !important;
  }
  .bg-dark-darker {
    background-color: $lightCol !important;
  }
  .border-secondary {
    border-color: $darkBgCol !important;
  }
  .text-light {
    color: grey !important;
  }
  // inputs
  .btn-secondary {
    background-color: $darkBgCol !important;
    border-color: $darkBgCol !important;
    color: var(--tg-theme-button-text-color);
  }
  .btn-primary,
  .nav-pills .nav-link.active,
  .form-check-input:checked,
  .form-check-input:checked {
    color: var(--tg-theme-button-text-color);
    background-color: var(--tg-theme-button-color);
    border-color: var(--tg-theme-button-color);
  }
  .btn-primary:hover,
  .btn-primary:focus {
    color: var(--tg-theme-button-text-color);
    background-color: color-mix(in srgb, var(--tg-theme-button-color), #000 15%);
    border-color: color-mix(in srgb, var(--tg-theme-button-color), #000 15%);
  }
  .btn-primary:disabled {
    background-color: var(--tg-theme-button-color);
    border-color: var(--tg-theme-button-color);
  }
  .btn-outline-primary {
    color: var(--tg-theme-button-color);
    border-color: var(--tg-theme-button-color);
  }
  .btn-outline-primary:hover {
    color: var(--tg-theme-button-text-color);
    background-color: color-mix(in srgb, var(--tg-theme-button-color), #000 15%);
    border-color: color-mix(in srgb, var(--tg-theme-button-color), #000 15%);
  }
  .btn-link {
    color: var(--tg-theme-link-color);
  }
  // inputs end
  .webapp-icon-shadow img {
    filter: drop-shadow(0px 0px 0px #808080);
  }
  .artifact-main-stat-icon img {
    filter: invert(var(--app-stat-icon-reverse));
  }
  .page {
    margin-bottom: 65px;
  }
  .bottom-tab-bar {
    background-color: var(--tg-theme-bg-color);
    border-color: var(--tg-theme-secondary-bg-color);
  }
  .header-sub-bg {
    background-color: color-mix(in srgb, var(--tg-theme-button-color), #000 50%);
  }
  // tables
  .character-picker .big-table .col:nth-child(even),
  .character-picker .big-table .row:nth-child(even):not(:nth-last-child(1)) .col,
  .character-picker .character-picker-mobile .row:nth-child(even) {
    background-color: color-mix(in srgb, var(--tg-theme-secondary-bg-color), rgba(0 0 0 / 10%) 50%);
  }
  .equipment {
    .table {
      color: var(--tg-theme-text-color) !important;
      > :not(caption) > * > * {
        border-bottom-width: 0px;
      }
      .btn-close,
      .accordion-button.collapsed,
      .btn-expand-inner {
        filter: invert(var(--app-stat-icon-reverse));
      }
      .accordion-item {
        border-color: $darkBgCol !important;
      }
      .accordion-body {
        background: var(--tg-theme-bg-color);
      }
    }
  }
  // end tables
  .map-wrap {
    .map-header-content {
      .text-wrap,
      label {
        filter: invert(var(--app-stat-icon-reverse));
      }
    }
    .map-tip div {
      filter: invert(var(--app-stat-icon-reverse));
    }
  }
  .item-detail-popover-card {
    .card-body {
      max-height: calc(var(--tg-viewport-height) - 350px);
    }
  }
  .card-header .btn-close {
    filter: invert(var(--app-stat-icon-reverse));
  }
  .card {
    background-color: var(--tg-theme-secondary-bg-color);
  }
  .search-item-card.highlighted {
    background-color: $darkBgCol !important;
  }
}
